From bf59e265bcde02f81ad744903f109175c3a66310 Mon Sep 17 00:00:00 2001
From: Richard Hughes <richard@hughsie.com>
Date: Wed, 31 Aug 2016 10:29:50 +0100
Subject: [PATCH 2/3] Write the ELF files with the correct section type

This should fix a compile failure on s390x.

Resolves: https://github.com/hughsie/fwupd/issues/63
---
 data/tests/dfu/example.elf | Bin 204 -> 204 bytes
 libdfu/dfu-format-elf.c    |   8 +++++++-
 libdfu/dfu-self-test.c     |  17 +++++++++++++++++
 3 files changed, 24 insertions(+), 1 deletion(-)

diff --git a/libdfu/dfu-format-elf.c b/libdfu/dfu-format-elf.c
index 60e21da..7de4e4f 100644
--- a/libdfu/dfu-format-elf.c
+++ b/libdfu/dfu-format-elf.c
@@ -77,6 +77,12 @@ _get_element_from_section_name (Elf *e, const gchar *desired_name)
 			g_warning ("failed gelf_getshdr");
 			continue;
 		}
+
+		/* not program data */
+		if (shdr.sh_type != SHT_PROGBITS)
+			continue;
+
+		/* not the same section name */
 		if ((name = elf_strptr (e, shstrndx, shdr.sh_name)) == NULL) {
 			g_warning ("failed elf_strptr");
 			continue;
@@ -227,7 +233,7 @@ dfu_format_elf_pack_element (Elf *e, DfuElement *element, GError **error)
 		return FALSE;
 	}
 	shdr->sh_name = 1;
-	shdr->sh_type = SHT_HASH;
+	shdr->sh_type = SHT_PROGBITS;
 	shdr->sh_flags = SHF_ALLOC;
 	shdr->sh_entsize = 0;
 	return TRUE;
diff --git a/libdfu/dfu-self-test.c b/libdfu/dfu-self-test.c
index b2da140..dcab2a1 100644
--- a/libdfu/dfu-self-test.c
+++ b/libdfu/dfu-self-test.c
@@ -23,6 +23,7 @@
 
 #include <glib-object.h>
 #include <stdlib.h>
+#include <string.h>
 
 #include "dfu-common.h"
 #include "dfu-context.h"
@@ -321,6 +322,10 @@ dfu_firmware_metadata_func (void)
 static void
 dfu_firmware_elf_func (void)
 {
+	DfuElement *element;
+	DfuImage *image;
+	GBytes *contents;
+	const gchar *data;
 	gboolean ret;
 	g_autofree gchar *filename = NULL;
 	g_autoptr(DfuFirmware) firmware = NULL;
@@ -346,6 +351,18 @@ dfu_firmware_elf_func (void)
 	g_assert_cmpint (dfu_firmware_get_size (firmware), ==, 0x0c);
 	g_assert_cmpint (dfu_firmware_get_cipher_kind (firmware), ==, DFU_CIPHER_KIND_NONE);
 
+	/* check the data */
+	image = dfu_firmware_get_image_default (firmware);
+	g_assert (image != NULL);
+	element = dfu_image_get_element_default (image);
+	g_assert (element != NULL);
+	contents = dfu_element_get_contents (element);
+	g_assert (contents != NULL);
+	g_assert_cmpint (g_bytes_get_size (contents), ==, 12);
+	data = g_bytes_get_data (contents, NULL);
+	g_assert (data != NULL);
+	g_assert (memcmp (data, "hello world\n", 12) == 0);
+
 	/* can we roundtrip without loosing data */
 	roundtrip_orig = dfu_self_test_get_bytes_for_file (file, &error);
 	g_assert_no_error (error);
-- 
2.7.4

