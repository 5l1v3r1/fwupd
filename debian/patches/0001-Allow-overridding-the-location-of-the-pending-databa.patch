From 5c1999b4ec2cab19fd6215e161eecc51a3a19097 Mon Sep 17 00:00:00 2001
From: Mario Limonciello <mario_limonciello@dell.com>
Date: Thu, 31 Mar 2016 12:47:52 -0500
Subject: [PATCH 1/2] Allow overridding the location of the pending database
 for test suite

---
 src/fu-pending.c   | 28 +++++++++++++++++++++++++---
 src/fu-pending.h   |  3 ++-
 src/fu-self-test.c | 13 ++++++-------
 3 files changed, 33 insertions(+), 11 deletions(-)

Index: fwupd/src/fu-pending.c
===================================================================
--- fwupd.orig/src/fu-pending.c
+++ fwupd/src/fu-pending.c
@@ -38,6 +38,7 @@ static void fu_pending_finalize			 (GObj
  **/
 typedef struct {
 	sqlite3				*db;
+	gchar				*pending_dir;
 } FuPendingPrivate;
 
 G_DEFINE_TYPE_WITH_PRIVATE (FuPending, fu_pending, G_TYPE_OBJECT)
@@ -61,15 +62,14 @@ fu_pending_load (FuPending *pending, GEr
 	g_return_val_if_fail (priv->db == NULL, FALSE);
 
 	/* create directory */
-	dirname = g_build_filename (LOCALSTATEDIR, "lib", "fwupd", NULL);
-	file = g_file_new_for_path (dirname);
+	file = g_file_new_for_path (priv->pending_dir);
 	if (!g_file_query_exists (file, NULL)) {
 		if (!g_file_make_directory_with_parents (file, NULL, error))
 			return FALSE;
 	}
 
 	/* open */
-	filename = g_build_filename (dirname, "pending.db", NULL);
+	filename = g_build_filename (priv->pending_dir, "pending.db", NULL);
 	g_debug ("FuPending: trying to open database '%s'", filename);
 	rc = sqlite3_open (filename, &priv->db);
 	if (rc != SQLITE_OK) {
@@ -530,8 +530,30 @@ fu_pending_class_init (FuPendingClass *k
 static void
 fu_pending_init (FuPending *pending)
 {
+	FuPendingPrivate *priv = GET_PRIVATE (pending);
+	const gchar *tmp;
+
+	/* allow this to be overidden for testing */
+	priv->pending_dir = g_build_filename (LOCALSTATEDIR, "lib", "fwupd", NULL);
+	tmp = g_getenv ("FWUPD_PENDING_DIR");
+	if (tmp != NULL)
+		fu_pending_set_dir (pending, tmp);
+
+}
+
+/**
+ * fu_pending_set_dir:
+ **/
+void
+fu_pending_set_dir (FuPending *pending, const gchar *pending_dir)
+{
+	FuPendingPrivate *priv = GET_PRIVATE (pending);
+	g_free (priv->pending_dir);
+	priv->pending_dir = g_strdup (pending_dir);
+	g_mkdir_with_parents (pending_dir, 0700);
 }
 
+
 /**
  * fu_pending_finalize:
  **/
Index: fwupd/src/fu-pending.h
===================================================================
--- fwupd.orig/src/fu-pending.h
+++ fwupd/src/fu-pending.h
@@ -67,7 +67,8 @@ FuDevice	*fu_pending_get_device			(FuPen
 							 GError		**error);
 GPtrArray	*fu_pending_get_devices			(FuPending	*pending,
 							 GError		**error);
-
+void           fu_pending_set_dir 			(FuPending *pending,
+							 const gchar *pending_dir);
 G_END_DECLS
 
 #endif /* __FU_PENDING_H */
Index: fwupd/src/fu-self-test.c
===================================================================
--- fwupd.orig/src/fu-self-test.c
+++ fwupd/src/fu-self-test.c
@@ -221,6 +221,7 @@ fu_provider_func (void)
 	g_assert_cmpint (cnt, ==, 1);
 
 	/* lets check the pending */
+	g_setenv("FWUPD_PENDING_DIR", "/tmp/fwupd-self-test/var/lib/fwupd", FALSE);
 	pending = fu_pending_new ();
 	device_tmp = fu_pending_get_device (pending, fu_device_get_id (device), &error);
 	g_assert_no_error (error);
@@ -271,7 +272,7 @@ fu_provider_func (void)
 	g_clear_error (&error);
 
 	/* delete files */
-	pending_db = g_build_filename (LOCALSTATEDIR, "lib", "fwupd", "pending.db", NULL);
+	pending_db = g_build_filename ("/tmp/fwupd-self-test/var/lib/fwupd", "pending.db", NULL);
 	g_unlink (pending_db);
 	g_unlink (pending_cap);
 }
@@ -340,7 +341,7 @@ fu_provider_rpi_func (void)
 			 "20150805");
 
 	/* clean up */
-	pending_db = g_build_filename (LOCALSTATEDIR, "lib", "fwupd", "pending.db", NULL);
+	pending_db = g_build_filename ("/tmp/fwupd-self-test/var/lib/fwupd", "pending.db", NULL);
 	g_unlink (pending_db);
 }
 
@@ -351,18 +352,16 @@ fu_pending_func (void)
 	gboolean ret;
 	FuDevice *device;
 	g_autoptr(FuPending) pending = NULL;
-	g_autofree gchar *dirname = NULL;
 	g_autofree gchar *filename = NULL;
 
+
 	/* create */
+	g_setenv("FWUPD_PENDING_DIR", "/tmp/fwupd-self-test/var/lib/fwupd", FALSE);
 	pending = fu_pending_new ();
 	g_assert (pending != NULL);
 
 	/* delete the database */
-	dirname = g_build_filename (LOCALSTATEDIR, "lib", "fwupd", NULL);
-	if (!g_file_test (dirname, G_FILE_TEST_IS_DIR))
-		return;
-	filename = g_build_filename (dirname, "pending.db", NULL);
+	filename = g_build_filename ("/tmp/fwupd-self-test/var/lib/fwupd/", "pending.db", NULL);
 	g_unlink (filename);
 
 	/* add a device */
