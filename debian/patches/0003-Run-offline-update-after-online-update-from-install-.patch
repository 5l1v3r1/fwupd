From 453471ee9eb3219af926f8ed44f5168ba49ad16f Mon Sep 17 00:00:00 2001
From: Mario Limonciello <mario_limonciello@dell.com>
Date: Thu, 16 Jul 2015 14:18:42 -0500
Subject: [PATCH 3/3] Run offline update after online update from install call.

This removes the need for setting a flag for the kind of update called.
All updates will be tried online first, and if that fails run in offline.

Providers that don't support one or the other are expected to have no
behavioral change.
---
 src/fu-main.c          |  3 --
 src/fu-provider-fake.c |  6 ----
 src/fu-provider.c      | 89 +++++++++++++++++++++++---------------------------
 src/fu-provider.h      |  1 -
 src/fu-self-test.c     |  2 +-
 src/fu-util.c          |  4 ---
 6 files changed, 41 insertions(+), 64 deletions(-)

diff --git a/src/fu-main.c b/src/fu-main.c
index 1181753..12f0c7f 100644
--- a/src/fu-main.c
+++ b/src/fu-main.c
@@ -847,9 +847,6 @@ fu_main_daemon_method_call (GDBusConnection *connection, const gchar *sender,
 		while (g_variant_iter_next (iter, "{&sv}",
 					    &prop_key, &prop_value)) {
 			g_debug ("got option %s", prop_key);
-			if (g_strcmp0 (prop_key, "offline") == 0 &&
-			    g_variant_get_boolean (prop_value) == TRUE)
-				flags |= FU_PROVIDER_UPDATE_FLAG_OFFLINE;
 			if (g_strcmp0 (prop_key, "allow-older") == 0 &&
 			    g_variant_get_boolean (prop_value) == TRUE)
 				flags |= FU_PROVIDER_UPDATE_FLAG_ALLOW_OLDER;
diff --git a/src/fu-provider-fake.c b/src/fu-provider-fake.c
index 800ca3b..9ce7886 100644
--- a/src/fu-provider-fake.c
+++ b/src/fu-provider-fake.c
@@ -62,12 +62,6 @@ fu_provider_fake_update (FuProvider *provider,
 			 FuProviderFlags flags,
 			 GError **error)
 {
-	if (flags & FU_PROVIDER_UPDATE_FLAG_OFFLINE) {
-		g_set_error_literal (error,
-				     FWUPD_ERROR,
-				     FWUPD_ERROR_INTERNAL,
-				     "cannot handle offline");
-	}
 	fu_provider_set_status (provider, FWUPD_STATUS_DECOMPRESSING);
 	fu_provider_set_status (provider, FWUPD_STATUS_DEVICE_WRITE);
 	return TRUE;
diff --git a/src/fu-provider.c b/src/fu-provider.c
index a32603f..6066eaa 100644
--- a/src/fu-provider.c
+++ b/src/fu-provider.c
@@ -215,65 +215,56 @@ fu_provider_update (FuProvider *provider,
 	_cleanup_object_unref_ FuDevice *device_pending = NULL;
 	GError *error_update = NULL;
 
-	/* schedule for next reboot, or handle in the provider */
-	if (flags & FU_PROVIDER_UPDATE_FLAG_OFFLINE) {
-		if (klass->update_offline == NULL)
-			return fu_provider_schedule_update (provider,
-							    device,
-							    stream_cab,
-							    error);
-		return klass->update_offline (provider, device, fd_fw, flags, error);
-	}
-
 	/* cancel the pending action */
 	if (!fu_provider_offline_invalidate (error))
 		return FALSE;
 
-	/* online */
-	if (klass->update_online == NULL) {
-		g_set_error_literal (error,
-				     FWUPD_ERROR,
-				     FWUPD_ERROR_NOT_SUPPORTED,
-				     "No online update possible");
-		return FALSE;
-	}
-	pending = fu_pending_new ();
-	device_pending = fu_pending_get_device (pending, fu_device_get_id (device), NULL);
-	if (!klass->update_online (provider, device, fd_fw, flags, &error_update)) {
-		/* save the error to the database */
-		if (device_pending != NULL) {
-			fu_pending_set_error_msg (pending, device,
-						  error_update->message, NULL);
+	/* try online first */
+	if (klass->update_online != NULL) {
+		pending = fu_pending_new ();
+		device_pending = fu_pending_get_device (pending, fu_device_get_id (device), NULL);
+		if (!klass->update_online (provider, device, fd_fw, flags, &error_update)) {
+			/* save the error to the database */
+			if (device_pending != NULL) {
+				fu_pending_set_error_msg (pending, device,
+							  error_update->message, NULL);
+			}
+			g_propagate_error (error, error_update);
 		}
-		g_propagate_error (error, error_update);
-		return FALSE;
-	}
 
-	/* cleanup */
-	if (device_pending != NULL) {
-		const gchar *tmp;
-
-		/* update pending database */
-		fu_pending_set_state (pending, device, FU_PENDING_STATE_SUCCESS, NULL);
-
-		/* delete cab file */
-		tmp = fu_device_get_metadata (device_pending, FU_DEVICE_KEY_FILENAME_CAB);
-		if (tmp != NULL && g_str_has_prefix (tmp, LIBEXECDIR)) {
-			_cleanup_error_free_ GError *error_local = NULL;
-			_cleanup_object_unref_ GFile *file = NULL;
-			file = g_file_new_for_path (tmp);
-			if (!g_file_delete (file, NULL, &error_local)) {
-				g_set_error (error,
-					     FWUPD_ERROR,
-					     FWUPD_ERROR_INVALID_FILE,
-					     "Failed to delete %s: %s",
-					     tmp, error_local->message);
-				return FALSE;
+		/* cleanup */
+		if (error_update == NULL && device_pending != NULL) {
+			const gchar *tmp;
+
+			/* update pending database */
+			fu_pending_set_state (pending, device, FU_PENDING_STATE_SUCCESS, NULL);
+
+			/* delete cab file */
+			tmp = fu_device_get_metadata (device_pending, FU_DEVICE_KEY_FILENAME_CAB);
+			if (tmp != NULL && g_str_has_prefix (tmp, LIBEXECDIR)) {
+				_cleanup_error_free_ GError *error_local = NULL;
+				_cleanup_object_unref_ GFile *file = NULL;
+				file = g_file_new_for_path (tmp);
+				if (!g_file_delete (file, NULL, &error_local)) {
+					g_set_error (error,
+						     FWUPD_ERROR,
+						     FWUPD_ERROR_INVALID_FILE,
+						     "Failed to delete %s: %s",
+						     tmp, error_local->message);
+					return FALSE;
+				}
 			}
 		}
+		return TRUE;
 	}
 
-	return TRUE;
+	/* schedule for next reboot, or handle in the provider */
+	if (klass->update_offline == NULL)
+		return fu_provider_schedule_update (provider,
+						    device,
+						    stream_cab,
+						    error);
+	return klass->update_offline (provider, device, fd_fw, flags, error);
 }
 
 /**
diff --git a/src/fu-provider.h b/src/fu-provider.h
index a589123..f883431 100644
--- a/src/fu-provider.h
+++ b/src/fu-provider.h
@@ -46,7 +46,6 @@ struct _FuProvider
 
 typedef enum {
 	FU_PROVIDER_UPDATE_FLAG_NONE		= 0,
-	FU_PROVIDER_UPDATE_FLAG_OFFLINE		= 1,
 	FU_PROVIDER_UPDATE_FLAG_ALLOW_REINSTALL	= 2,
 	FU_PROVIDER_UPDATE_FLAG_ALLOW_OLDER	= 4,
 	FU_PROVIDER_UPDATE_FLAG_LAST
diff --git a/src/fu-self-test.c b/src/fu-self-test.c
index 3762faa..c5ffe1f 100644
--- a/src/fu-self-test.c
+++ b/src/fu-self-test.c
@@ -266,7 +266,7 @@ fu_provider_func (void)
 	g_assert_no_error (error);
 	g_assert (stream != NULL);
 	ret = fu_provider_update (provider, device, stream, -1,
-				  FU_PROVIDER_UPDATE_FLAG_OFFLINE, &error);
+				  NULL, &error);
 	g_assert_no_error (error);
 	g_assert (ret);
 	g_assert_cmpint (cnt, ==, 1);
diff --git a/src/fu-util.c b/src/fu-util.c
index d2f3f0a..79e591a 100644
--- a/src/fu-util.c
+++ b/src/fu-util.c
@@ -399,10 +399,6 @@ fu_util_update (FuUtilPrivate *priv, const gchar *id, const gchar *filename,
 			       "reason", g_variant_new_string ("user-action"));
 	g_variant_builder_add (&builder, "{sv}",
 			       "filename", g_variant_new_string (filename));
-	if (flags & FU_PROVIDER_UPDATE_FLAG_OFFLINE) {
-		g_variant_builder_add (&builder, "{sv}",
-				       "offline", g_variant_new_boolean (TRUE));
-	}
 	if (flags & FU_PROVIDER_UPDATE_FLAG_ALLOW_OLDER) {
 		g_variant_builder_add (&builder, "{sv}",
 				       "allow-older", g_variant_new_boolean (TRUE));
-- 
1.9.1

