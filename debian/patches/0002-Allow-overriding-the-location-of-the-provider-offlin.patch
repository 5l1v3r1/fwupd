From 661cd75b413a3eb3e611a274dbd4c5e1817b1ed7 Mon Sep 17 00:00:00 2001
From: Mario Limonciello <mario_limonciello@dell.com>
Date: Thu, 31 Mar 2016 13:23:19 -0500
Subject: [PATCH 2/2] Allow overriding the location of the provider offline
 files for test suite

---
 src/fu-provider.c  | 38 +++++++++++++++++++++++++++++++++-----
 src/fu-provider.h  |  3 +++
 src/fu-self-test.c |  1 +
 3 files changed, 37 insertions(+), 5 deletions(-)

Index: fwupd/src/fu-provider.c
===================================================================
--- fwupd.orig/src/fu-provider.c
+++ fwupd/src/fu-provider.c
@@ -35,6 +35,13 @@
 
 static void	fu_provider_finalize	(GObject	*object);
 
+/**
+ * FuProviderPrivate:
+ **/
+typedef struct {
+	gchar                   *offline_dir;
+} FuProviderPrivate;
+
 enum {
 	SIGNAL_DEVICE_ADDED,
 	SIGNAL_DEVICE_REMOVED,
@@ -44,7 +51,8 @@ enum {
 
 static guint signals[SIGNAL_LAST] = { 0 };
 
-G_DEFINE_TYPE (FuProvider, fu_provider, G_TYPE_OBJECT)
+G_DEFINE_TYPE_WITH_PRIVATE (FuProvider, fu_provider, G_TYPE_OBJECT)
+#define GET_PRIVATE(o) (fu_provider_get_instance_private (o))
 
 /**
  * fu_provider_offline_invalidate:
@@ -117,9 +125,10 @@ fu_provider_schedule_update (FuProvider
 			     GBytes *blob_cab,
 			     GError **error)
 {
+	FuProviderPrivate *priv = GET_PRIVATE (provider);
+
 	gchar tmpname[] = {"XXXXXX.cap"};
 	guint i;
-	g_autofree gchar *dirname = NULL;
 	g_autofree gchar *filename = NULL;
 	g_autoptr(FuDevice) device_tmp = NULL;
 	g_autoptr(FuPending) pending = NULL;
@@ -138,8 +147,7 @@ fu_provider_schedule_update (FuProvider
 	}
 
 	/* create directory */
-	dirname = g_build_filename (LOCALSTATEDIR, "lib", "fwupd", NULL);
-	file = g_file_new_for_path (dirname);
+	file = g_file_new_for_path (priv->offline_dir);
 	if (!g_file_query_exists (file, NULL)) {
 		if (!g_file_make_directory_with_parents (file, NULL, error))
 			return FALSE;
@@ -148,7 +156,7 @@ fu_provider_schedule_update (FuProvider
 	/* get a random filename */
 	for (i = 0; i < 6; i++)
 		tmpname[i] = g_random_int_range ('A', 'Z');
-	filename = g_build_filename (dirname, tmpname, NULL);
+	filename = g_build_filename (priv->offline_dir, tmpname, NULL);
 
 	/* just copy to the temp file */
 	fu_provider_set_status (provider, FWUPD_STATUS_SCHEDULING);
@@ -470,6 +478,26 @@ fu_provider_class_init (FuProviderClass
 static void
 fu_provider_init (FuProvider *provider)
 {
+        FuProviderPrivate *priv = GET_PRIVATE (provider);
+	const gchar *tmp;
+
+        /* allow this to be overidden for testing */
+        priv->offline_dir = g_build_filename (LOCALSTATEDIR, "lib", "fwupd", NULL);
+        tmp = g_getenv ("FWUPD_OFFLINE_DIR");
+        if (tmp != NULL)
+                fu_provider_set_dir (provider, tmp);
+}
+
+/**
+ * fu_provider_set_dir:
+ **/
+void
+fu_provider_set_dir (FuProvider *provider, const gchar *offline_dir)
+{
+        FuProviderPrivate *priv = GET_PRIVATE (provider);
+        g_free (priv->offline_dir);
+        priv->offline_dir = g_strdup (offline_dir);
+        g_mkdir_with_parents (offline_dir, 0700);
 }
 
 /**
Index: fwupd/src/fu-provider.h
===================================================================
--- fwupd.orig/src/fu-provider.h
+++ fwupd/src/fu-provider.h
@@ -117,6 +117,9 @@ gboolean	 fu_provider_get_results	(FuPro
 						 FuDevice	*device,
 						 GError		**error);
 
+void		 fu_provider_set_dir		(FuProvider *provider,
+						 const gchar *offline_dir);
+
 G_END_DECLS
 
 #endif /* __FU_PROVIDER_H */
Index: fwupd/src/fu-self-test.c
===================================================================
--- fwupd.orig/src/fu-self-test.c
+++ fwupd/src/fu-self-test.c
@@ -191,6 +191,7 @@ fu_provider_func (void)
 	g_autoptr(GMappedFile) mapped_file = NULL;
 
 	/* create a fake device */
+	g_setenv("FWUPD_OFFLINE_DIR", "/tmp/fwupd-self-test/var/lib/fwupd", FALSE);
 	provider = fu_provider_fake_new ();
 	g_signal_connect (provider, "device-added",
 			  G_CALLBACK (_provider_device_added_cb),
